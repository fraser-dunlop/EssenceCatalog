language ESSENCE' 1.0

find words_ExplicitVarSizeWithFlagsR9_Flags: matrix indexed by [int(1..4294967296)] of bool
find words_ExplicitVarSizeWithFlagsR9_Values_Function1D: matrix indexed by [int(1..4294967296), int(1..8)] of int(1..4)
maximising sum([toInt(words_ExplicitVarSizeWithFlagsR9_Flags[q72]) | q72 : int(1..4294967296)])
such that
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q64] ->
         sum([toInt(words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q64, q67] = 2) | q67 : int(1..8)]) +
         sum([toInt(words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q64, q70] = 3) | q70 : int(1..8)])
         = 4 | q64 : int(1..4294967296)]),
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q40] /\ words_ExplicitVarSizeWithFlagsR9_Flags[q41] ->
         sum([toInt(and([sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q40, q42] | q42 : int(1..8), q42 = i])
                         !=
                         sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q41, q43] | q43 : int(1..8), q43 = i]),
                         or([q44 = i | q44 : int(1..8)]), or([q45 = i | q45 : int(1..8)]);
                             int(1..3)]))
                  | i : int(1..8)])
         >= 4
             | q40 : int(1..4294967296), q41 : int(1..4294967296), q41 > q40]),
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q46] /\ words_ExplicitVarSizeWithFlagsR9_Flags[q47] ->
         sum([toInt(!or([and([1 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q46, q48]
                                       | q48 : int(1..8), q48 = 9 - i])
                              /\
                              4 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q47, q49]
                                       | q49 : int(1..8), q49 = i]),
                              or([q50 = 9 - i | q50 : int(1..8)]), or([q51 = i | q51 : int(1..8)]);
                                  int(1..3)]),
                         and([2 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q46, q52]
                                       | q52 : int(1..8), q52 = 9 - i])
                              /\
                              3 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q47, q53]
                                       | q53 : int(1..8), q53 = i]),
                              or([q54 = 9 - i | q54 : int(1..8)]), or([q55 = i | q55 : int(1..8)]);
                                  int(1..3)]),
                         and([3 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q46, q56]
                                       | q56 : int(1..8), q56 = 9 - i])
                              /\
                              2 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q47, q57]
                                       | q57 : int(1..8), q57 = i]),
                              or([q58 = 9 - i | q58 : int(1..8)]), or([q59 = i | q59 : int(1..8)]);
                                  int(1..3)]),
                         and([4 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q46, q60]
                                       | q60 : int(1..8), q60 = 9 - i])
                              /\
                              1 =
                              sum([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q47, q61]
                                       | q61 : int(1..8), q61 = i]),
                              or([q62 = 9 - i | q62 : int(1..8)]), or([q63 = i | q63 : int(1..8)]);
                                  int(1..3)]);
                             int(1..4)]))
                  | i : int(1..8)])
         >= 4
             | q46 : int(1..4294967296), q47 : int(1..4294967296), q47 > q46]),
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q27 + 1] ->
         words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q27, ..] <lex
         words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q27 + 1, ..]
             | q27 : int(1..4294967295)]),
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q28] = false ->
         and([words_ExplicitVarSizeWithFlagsR9_Values_Function1D[q28, q33] = 1 | q33 : int(1..8)])
             | q28 : int(1..4294967296)]),
    and([words_ExplicitVarSizeWithFlagsR9_Flags[q29 + 1] -> words_ExplicitVarSizeWithFlagsR9_Flags[q29]
             | q29 : int(1..4294967295)])

$ Conjure's
$ {"finds": [{"Name": "words"}],
$  "givens": [],
$  "enumGivens": [],
$  "enumLettings": [{"LettingDomainDefnEnum": [{"Name": "Base"},
$                                              [{"Name": "A"}, {"Name": "C"}, {"Name": "G"}, {"Name": "T"}]]}],
$  "lettings": [[{"Name": "Base"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                            {"Constant": {"ConstantInt": 4}}]}]}}],
$               [{"Name": "Index"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                            {"Constant": {"ConstantInt": 8}}]}]}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"PickAll": []},
$  "trailCompact": [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 2, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["q", 73]],
$  "nbExtraGivens": 0,
$  "representations": [[{"Name": "words"},
$                       {"DomainSet": [{"Set_ExplicitVarSizeWithFlags": []}, {"SizeAttr_None": []},
$                                      {"DomainFunction": [{"Function_1D": []},
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 4}}]}]}]}]}]],
$  "representationsTree": [[{"Name": "words"},
$                           [{"rootLabel": {"Set_ExplicitVarSizeWithFlags": []},
$                             "subForest": [{"rootLabel": {"Function_1D": []},
$                                            "subForest": [{"rootLabel": null,
$                                                           "subForest": []},
$                                                          {"rootLabel": null,
$                                                           "subForest": []}]}]}]]],
$  "originalDomains": [[{"Name": "words"},
$                       {"DomainSet": [[], {"SizeAttr_None": []},
$                                      {"DomainFunction": [[],
$                                                          [{"SizeAttr_None": []}, "PartialityAttr_Total",
$                                                           "JectivityAttr_None"],
$                                                          {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                           {"Constant": {"ConstantInt": 8}}]}]},
$                                                          {"DomainEnum": [{"Name": "Base"}, null, null]}]}]}]],
$  "questionAnswered": []}
