language ESSENCE' 1.0

given n: int(1..)
letting let1 be 3 * n
find assign_Function1D: matrix indexed by [int(1..let1)] of int(1..9)
such that
    sum([assign_Function1D[3 * i + 1] / (assign_Function1D[3 * i + 2] * 10 + assign_Function1D[3 * i + 3])
             | i : int(0..n - 1)])
    = 1,
    and([sum([toInt(assign_Function1D[i] = d) | i : int(1..3 * n)]) <= (n + 1) / 3 | d : int(1..9)]),
    and([or([assign_Function1D[q2] = q1 | q2 : int(1..let1)]) | q1 : int(1..9)])

$ Conjure's
$ {"finds": [{"Name": "assign"}],
$  "givens": [{"Name": "n"}],
$  "enumGivens": [],
$  "enumLettings": [],
$  "lettings": [[{"Name": "Index"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                            {"Op": {"MkOpProduct": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                          {"Constant": {"ConstantInt": 2}}]}]},
$                                                                                                                         [{"Constant": {"ConstantInt": 3}},
$                                                                                                                          {"Reference": [{"Name": "n"},
$                                                                                                                                         {"DeclNoRepr": ["Given",
$                                                                                                                                                         {"Name": "n"},
$                                                                                                                                                         {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]},
$                                                                                                                                                         {"NoRegion": []}]}]}]]}}}}]}]}}],
$               [{"Name": "Digit"},
$                {"Domain": {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                            {"Constant": {"ConstantInt": 9}}]}]}}],
$               [{"MachineName": ["let", 1, []]},
$                {"Op": {"MkOpProduct": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                              {"Constant": {"ConstantInt": 2}}]}]},
$                                                                             [{"Constant": {"ConstantInt": 3}},
$                                                                              {"Reference": [{"Name": "n"},
$                                                                                             {"DeclNoRepr": ["Given",
$                                                                                                             {"Name": "n"},
$                                                                                                             {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]},
$                                                                                                             {"NoRegion": []}]}]}]]}}}}]],
$  "unnameds": [],
$  "strategyQ": {"PickFirst": []},
$  "strategyA": {"PickAll": []},
$  "trailCompact": [[1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1], [1, 1, 1],
$                   [1, 1, 1], [1, 1, 1], [1, 1, 1]],
$  "trailVerbose": [],
$  "trailRewrites": [],
$  "nameGenState": [["let", 2], ["q", 4]],
$  "nbExtraGivens": 0,
$  "representations": [[{"Name": "n"}, {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      [{"Name": "assign"},
$                       {"DomainFunction": [{"Function_1D": []},
$                                           [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_Surjective"],
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Reference": [{"MachineName": ["let", 1,
$                                                                                                            []]},
$                                                                                           {"Alias": {"Op": {"MkOpProduct": {"AbstractLiteral": {"AbsLitMatrix": [{"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                                                                                                                                                   {"Constant": {"ConstantInt": 2}}]}]},
$                                                                                                                                                                  [{"Constant": {"ConstantInt": 3}},
$                                                                                                                                                                   {"Reference": [{"Name": "n"},
$                                                                                                                                                                                  {"DeclHasRepr": ["Given",
$                                                                                                                                                                                                   {"Name": "n"},
$                                                                                                                                                                                                   {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}]}]}]]}}}}}]}]}]},
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Constant": {"ConstantInt": 9}}]}]}]}]],
$  "representationsTree": [[{"Name": "assign"},
$                           [{"rootLabel": {"Function_1D": []},
$                             "subForest": [{"rootLabel": null,
$                                            "subForest": []},
$                                           {"rootLabel": null,
$                                            "subForest": []}]}]],
$                          [{"Name": "n"},
$                           [{"rootLabel": null,
$                             "subForest": []}]]],
$  "originalDomains": [[{"Name": "n"}, {"DomainInt": [{"RangeLowerBounded": {"Constant": {"ConstantInt": 1}}}]}],
$                      [{"Name": "assign"},
$                       {"DomainFunction": [[],
$                                           [{"SizeAttr_None": []}, "PartialityAttr_Total", "JectivityAttr_Surjective"],
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Reference": [{"MachineName": ["let", 1,
$                                                                                                            []]},
$                                                                                           null]}]}]},
$                                           {"DomainInt": [{"RangeBounded": [{"Constant": {"ConstantInt": 1}},
$                                                                            {"Constant": {"ConstantInt": 9}}]}]}]}]],
$  "questionAnswered": []}
