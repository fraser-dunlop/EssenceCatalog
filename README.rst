
This repository is for problem specifications written in Essence.

Each problem may contain a README file containing notes and findings about the problem.
(Though most problems do not.)

Optionally, each problem may also contain:

* parameter and solution files for known/published instances.
* scripts to generate random parameter files.

The repository also contains Essence Prime outputs generated by Conjure.

See `Directory structure`_ for an explanation on how things are organised.


Old Version
===========

An older version of the Essence Catalog is referenced from `The Automated Modelling of Constraint Programs <http://www.cs.york.ac.uk/aig/constraints/AutoModel/>`_ webpage hosted at the University of York.
Unfortunately this version is not available at the moment.
We found a version of it on the `Wayback machine <http://web.archive.org/web/20150402222531/http://www.cs.york.ac.uk/aig/constraints/AutoModel/Essence/specs120/>`_ which can be used in case you need to refer to that version.


Relation to CSPLib
==================

`CSPLib <http://www.csplib.org>`_ is a library of problems specified in natural language.
Its code is hosted at `GitHub <http://github.com/csplib/csplib>`_.

This repository uses CSPLib as a submodule.

We will try to make sure that:

* all the Essence files hosted on CSPLib are included in the Essence Catalog, and
* if an Essence file is added to the Essence Catalog, it will be moved to CSPLib as soon as possible (when we have a natural language problem specification ready).


Generated files
===============

There are two main kinds of generated files in this repository, generated by running two different scripts.
First is the `Modelling`_ script, to generate Essence Prime models. This was the main motivation for creating the repository but once it is created we decided to also run some backend solvers for when we have some parameter files available.
Hence the second is the `Solutions`_ script.

Modelling
---------

We run a few configurations of Conjure and keep the generated Essence Prime models in this repository. This is basically so we can have a record of the generated models.

Notice that the Essence Prime models may not be up-to-date at a given time with respect to the current version of Conjure.

Solutions
---------

We run a few configurations of Savile Row and a few backend solvers to solve using each generated Essence Prime model and each parameter file.

Logs and statistics
-------------------

Under the logs directory we keep some statistics. These files are updated when a "modelling" or a "solutions" script is run, so going back in the history of the repository should always give consistent model/solution files and statistics.

* ``logs/versions`` directory contains software versions.
* ``logs/gnuparallel/modelling_joblog`` contains some information (generated by the GNU Parallel tool) regarding running the "modelling" script.
* ``logs/gnuparallel/solutions_joblog``, similarly, contains some information (generated by the GNU Parallel tool) regarding running the "solutions" script.
* ``logs/infos.tsv`` is a tab separated file containing information generated by Savile Row (the data what Savile Row refers to as the "info files").


Scripts
=======

Here are the scripts themselves.

The scripts contained in this repository are here to (mainly) achieve the following 3 things.

#. Keep it synchronised with CSPLib
#. Generate Essence Prime models using Conjure
#. Solve (for existing parameters) using Conjure

The Essence Prime model files and solution files will be kept in the repository for ease of use, ease of reference, and to have a historical recording.

* Use ``scripts/export_to_csplib.sh`` for exporting Essence problem specification to the CSPLib submodule.
* Use ``scripts/import_from_csplib.sh`` for importing Essence problem specification from the CSPLib submodule.
* Use ``scripts/modelling/recompute.sh N`` to generate Essence Prime models (Using N cores)
* Use ``scripts/solutions/recompute.sh N`` to generate solutions (Using N cores)
  Time limit for Savile Row, Minion, and Lingeling are all the same and is controlled by the ``LIMIT_TIME`` environment variable. The default value is 60 (seconds). To use a different value, prepend the following to the solutions recompute command: ``LIMIT_TIME=SEC``.


Directory structure
===================

* | Essence files:
  | ``problems/[problem]/[essence].essence``.

  | Where ``[problem]`` is the name of the problem, and ``[essence]`` is the name of the problem specification in Essence.

* | Essence parameter files:
  | ``problems/[problem]/params`` or ``problems/[problem]/[essence]-params``.

  | The union of both of these directories will be taken, so either can be used on a case by case basis.

* | Essence Prime files (generated):
  | ``problems/[problem]/[essence]-models/[conjure-mode]/#.eprime``.

  | Where ``[conjure-mode]`` is the mode we use when calling Conjure for model generation (currently either "compact" or "noch").

* | Essence Prime parameter files (generated):
  | ``problems/[problem]/[essence]-models/[conjure-mode]/[sr-mode]/[solver]/[model]-[param].eprime-param``.

  | Where ``[sr-mode]`` is the mode we use when calling Savile Row (currently either "O0" or "O2"),
  | and ``[solver]`` is the backend solver we use (currently either "minion" or "lingeling"),
  | and ``[model]`` is the name of the model used,
  | and ``[param]`` is the name of the Essence level parameter file.

* | Essence Prime solution files (generated):
  | ``problems/[problem]/[essence]-models/[conjure-mode]/[sr-mode]/[solver]/[model]-[param]-[solution].eprime-solution``.

  | Where ``[solution]`` is the order of the generated solution. This is done by convention by Conjure, and it should just be "1" when a single is solution is to be found.

* | Essence solution files (generated):
  | ``problems/[problem]/[essence]-models/[conjure-mode]/[sr-mode]/[solver]/[model]-[param]-[solution].solution``.

  | The solution converted back to Essence.


License
=======

All files in this repository are licensed under
`Creative Commons Attribution 4.0 International License <http://creativecommons.org/licenses/by/4.0/>`_.

